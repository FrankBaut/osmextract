% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match.R
\name{oe_match}
\alias{oe_match}
\alias{oe_match.default}
\alias{oe_match.sfc_POINT}
\alias{oe_match.numeric}
\alias{oe_match.character}
\title{Match input place with a geographical zone}
\usage{
oe_match(place, ...)

\method{oe_match}{default}(place, ...)

\method{oe_match}{sfc_POINT}(place, provider = "geofabrik", oe_verbose = FALSE, ...)

\method{oe_match}{numeric}(place, provider = "geofabrik", oe_verbose = FALSE, ...)

\method{oe_match}{character}(
  place,
  provider = "geofabrik",
  match_by = "name",
  max_string_dist = 1,
  interactive_ask = FALSE,
  oe_verbose = FALSE,
  ...
)
}
\arguments{
\item{place}{Description of the geographical area that should be download
through the chosen \code{provider}. Can be either a length-1 character vector, a
length-1 \code{sfc_POINT} object or a numeric vector with length 2. See details
and examples.}

\item{...}{arguments passed to other methods}

\item{provider}{Which provider should be used to download the data?
Available providers can be found with the following command:
\code{osmextractr:::oe_available_providers()}}

\item{oe_verbose}{Boolean. If \code{TRUE} the function prints informative messages.}

\item{match_by}{Which column of the provider data should be used for matching
the input place with the provider's data? The default is "name". Check
details and examples to understand how this parameter works. Ignored if
\code{place} is not a character vector since the matching is performed through a
spatial operation.}

\item{max_string_dist}{Numeric value greater or equal than 0. What is the
maximum distance in fuzzy matching to tolerate before asking the user to
select which zone to download? This parameter is set equal to 0 if
\code{match_by} is equal to \code{iso3166_1_alpha2} or \code{iso3166_2}. Check details and
examples to understand why this parameter is important. Ignored if \code{place}
is not a character vector since the matching is performed through a spatial
operation.}

\item{interactive_ask}{Boolean. If \code{TRUE} the function creates and
interactive menu in case the best match is further than \code{max_string_dist}.
Check details and examples to understand why this parameter is important.
Ignored if \code{place} is not a character vector since the matching is
performed through a spatial operation.}
}
\value{
A list with two elements, named \code{url} and \code{file_size}. The first
element is the URL of the file associated with the input \code{place}, while
the second element is the size of the file (which may be \code{NULL} or \code{NA})
}
\description{
This function is used to match the input \code{place} with the URL of the
corresponding pbf file (and its file size, if present).
}
\examples{
# The simplest example:
oe_match("Italy")

# Match the input zone using an sfc_POINT object:
milan_duomo = sf::st_sfc(sf::st_point(c(1514924, 5034552)), crs = 3003)
oe_match(milan_duomo)

# Match the input zone using a numeric vector of coordinates
# (in which case crs = 4326 is assumed)
oe_match(c(9.1916, 45.4650)) # Milan, Duomo using CRS = 4326

# Perform the matching operations using other columns instead of "name".
oe_match("RU", match_by = "iso3166_1_alpha2")
# Increase the max_string_dist parameter and help the function:
oe_match("Isle Wight", max_string_dist = 3)
# but be aware that it can be dangerous:
oe_match("London", max_string_dist = 3, oe_verbose = TRUE)

# Check interactive_ask:
if (interactive()) {
    oe_match("London", interactive_ask = TRUE)
}

# Change the provider:
oe_match("Leeds", provider = "bbbike")
}
\seealso{
\code{oe_check_pattern()}
}
