% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get.R
\name{oe_get}
\alias{oe_get}
\title{Download, translate and read OSM extracts}
\usage{
oe_get(
  place,
  layer = "lines",
  provider = "geofabrik",
  ...,
  match_by = "name",
  max_string_dist = 1,
  interactive_ask = FALSE,
  download_directory = oe_download_directory(),
  force_download = FALSE,
  max_file_size = 5e+08,
  vectortranslate_options = NULL,
  osmconf_ini = NULL,
  extra_attributes = NULL,
  force_vectortranslate = NULL,
  download_only = FALSE,
  skip_vectortranslate = FALSE,
  quiet = TRUE
)
}
\arguments{
\item{place}{Description of the geographical area that should be matched to a
.osm.pbf file through the chosen \code{provider}. Can be either a length-1
character vector, a length-1 \code{sfc_POINT} object or a numeric vector of
coordinates with length 2. In the latter case it is assumed that the EPSG
code is 4326, while you can use any EPSG code with an \code{sfc_POINT} object.
See details and examples.}

\item{layer}{Which \code{layer} should be read in? Typically \code{points}, \code{lines}
(the default), \code{multilinestrings}, \code{multipolygons} or \code{other_relations}.}

\item{provider}{Which provider should be used to download the data? Available
providers can be found with the following command: \code{oe_providers()}.}

\item{...}{Arguments that should  be passed to \code{\link[sf:st_read]{sf::st_read()}}}

\item{match_by}{Which column of the provider's database should be used for
matching the input \code{place} with a .osm.pbf file? The default is "name".
Check details and examples to understand how this parameter works. Ignored
if \code{place} is not a character vector since the matching is performed
through a spatial operation.}

\item{max_string_dist}{Numerical value greater or equal than 0. What is the
maximum distance in fuzzy matching to tolerate before asking the user to
select which zone to download? This parameter is set equal to 0 if
\code{match_by} is equal to \code{iso3166_1_alpha2} or \code{iso3166_2}. Check details and
examples to understand why this parameter is important. Ignored if \code{place}
is not a character vector since the matching is performed through a spatial
operation.}

\item{interactive_ask}{Boolean. If \code{TRUE} the function creates and
interactive menu in case the best match is further than \code{max_string_dist},
otherwise it fails with \code{stop()}. Check details and examples to understand
why this parameter is important. Ignored if \code{place} is not a character
vector since the matching is performed through a spatial operation.}

\item{download_directory}{Where to download the file containing the OSM data?
By default this is \code{tempdir()}, which changes each time you restart R.
You can set a persistent \code{download_directory} by adding the following
to your \code{.Renviron} file (e.g. with \code{usethis::edit_r_environ()}):
\verb{OSMEXT_DOWNLOAD_DIRECTORY=/path/to/osm/data}.}

\item{force_download}{Should the file be updated if it has already been
downloaded? \code{FALSE} by default. This parameter is used to update old
\code{.osm.pbf} files.}

\item{max_file_size}{The maximum file size to download without asking in
interactive mode. Default: \code{5e+8}, half a gigabyte.}

\item{vectortranslate_options}{Options to pass to the \code{\link[sf:gdal_utils]{sf::gdal_utils()}}
argument \code{options}. Set by default. Check Details at
\code{oe_vectortranslate()}.}

\item{osmconf_ini}{The configuration file specifying which columns should be
in the resulting data frame. See documentation at
\href{https://gdal.org/drivers/vector/osm.html}{gdal.org}. Check Details at
\code{oe_vectortranslate()}.}

\item{extra_attributes}{Which addition columns, corresponding to OSM keys,
should be in the resulting dataset? \code{FALSE} by default. Check Details at
\code{oe_vectortranslate()} and \code{oe_get_keys()}.}

\item{force_vectortranslate}{Boolean. Force the original \code{.pbf} file to be
translated into a \code{.gpkg} file, even if a \code{.gpkg} with the same name
already exists? Check Details at \code{oe_vectortranslate()}.}

\item{download_only}{Boolean. If \code{TRUE} then the function only returns the
path where the matched file is stored, instead of reading it. \code{FALSE} by
default.}

\item{skip_vectortranslate}{Boolean. If \code{TRUE} then the function skips all
the vectortranslate operations and it reads (or simply returns the path) of
the \code{.osm.pbf} file. \code{FALSE} by default.}

\item{quiet}{Boolean. If \code{FALSE} the function prints informative messages.}
}
\value{
An sf object related to the input place.
}
\description{
Download, translate and read OSM extracts
}
\details{
This function is a wrapper around ...
}
\examples{
its_leeds = oe_get("ITS Leeds", provider = "test", quiet = FALSE)
class(its_leeds)
summary(sf::st_geometry_type(its_leeds))
# Add another layer to the .gpkg file
its_leeds_points = oe_get("ITS Leeds", provider = "test", layer = "points")
summary(sf::st_geometry_type(its_leeds_points))
# Get the .osm.pbf and .gpkg file path
oe_get("ITS Leeds", provider = "test", download_only = TRUE)
oe_get("ITS Leeds", provider = "test", download_only = TRUE, skip_vectortranslate = TRUE)
# add additional attributes
im = oe_get("ITS Leeds", provider = "test", extra_attributes = "oneway")
names(im)
\dontrun{
# alternative providers
baku = oe_get(place = "Baku", provider = "bbbike", quiet = FALSE)
}
}
